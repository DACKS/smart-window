{
	"info": {
		"_postman_id": "9bb90eee-4ac2-424a-aff9-620d8aeadece",
		"name": "smart-window tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "register",
					"item": [
						{
							"name": "register code 201",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('register code 201', () => {",
											"    pm.response.to.have.status(201);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"not_in_db\",\n    \"password\": \"test_password\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:5000/api/auth/register",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "register code 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('register code 403', () => {",
											"    pm.response.to.have.status(403);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"not_in_db\",\n    \"password\": \"test_password\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:5000/api/auth/register",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "register code 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('register code 400', () => {",
											"    pm.response.to.have.status(400);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:5000/api/auth/register",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"auth",
										"register"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "login",
					"item": [
						{
							"name": "login code 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('login code 200', () => {",
											"    pm.response.to.have.status(200);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"test_username\",\n    \"password\": \"test_password\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:5000/api/auth/login",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "login code 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('login code 403', () => {",
											"    pm.response.to.have.status(403);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"test_username\",\n    \"password\": \"incorrect_password\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:5000/api/auth/login",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "login code 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('logout code 400', () => {",
											"    pm.response.to.have.status(400);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:5000/api/auth/login",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "logout",
					"item": [
						{
							"name": "logout code 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('logout code 200', () => {",
											"    pm.response.to.have.status(200);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:5000/api/auth/logout",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"auth",
										"logout"
									]
								}
							},
							"response": []
						},
						{
							"name": "login required code 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('logoin required code 401', () => {",
											"    pm.response.to.have.status(401);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:5000/api/window",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"window"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "login for next tests",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"test_username\",\n    \"password\": \"test_password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:5000/api/auth/login",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "window",
			"item": [
				{
					"name": "display",
					"item": [
						{
							"name": "window display code 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('window display code 200', () => {",
											"    pm.response.to.have.status(200);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:5000/api/window",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"window"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "update",
					"item": [
						{
							"name": "window update code 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('window update code 400', () => {",
											"    pm.response.to.have.status(400);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:5000/api/window/update",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"window",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "window update code 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('window update code 200', () => {",
											"    pm.response.to.have.status(200);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"test_name\",\n    \"openDirection\": \"left\",\n    \"openAngle\": 10.2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:5000/api/window/update",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"window",
										"update"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "intervals",
			"item": [
				{
					"name": "display",
					"item": [
						{
							"name": "intervals display code 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('intervals display code 200', () => {",
											"    pm.response.to.have.status(200);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:5000/api/intervals",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"intervals"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "create",
					"item": [
						{
							"name": "intervals create code 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('intervals create code 400', () => {",
											"    pm.response.to.have.status(400);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:5000/api/intervals/create",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"intervals",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "intervals create code 201",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('intervals create code 201', () => {",
											"    pm.response.to.have.status(201);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":\"test_interval2\", \n    \"iStart\":\"2022-01-03 11:10:00\",\n    \"iEnd\":\"2022-01-04 11:10:00\",\n    \"luminosity\":1.0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:5000/api/intervals/create",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"intervals",
										"create"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "update",
					"item": [
						{
							"name": "intervals update code 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('intervals update code 400', () => {",
											"    pm.response.to.have.status(400);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:5000/api/intervals/0/update",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"intervals",
										"0",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "intervals update code 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('intervals display code 200', () => {",
											"    pm.response.to.have.status(200);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":\"test_interval2\", \n    \"iStart\":\"2022-01-03 11:10:00\",\n    \"iEnd\":\"2022-01-04 11:10:00\",\n    \"luminosity\":1.0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:5000/api/intervals/1/update",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"intervals",
										"1",
										"update"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "delete",
					"item": [
						{
							"name": "intervals delete code 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('intervals delete code 400', () => {",
											"    pm.response.to.have.status(400);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:5000/api/intervals/0/delete",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"intervals",
										"0",
										"delete"
									]
								}
							},
							"response": []
						},
						{
							"name": "intervals delete code 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('intervals delete code 200', () => {",
											"    pm.response.to.have.status(200);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "localhost:5000/api/intervals/1/delete",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"intervals",
										"1",
										"delete"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "statistics",
					"item": [
						{
							"name": "display",
							"item": [
								{
									"name": "statistics display code 200",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('statistics display code 200', () => {",
													"    pm.response.to.have.status(200);",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "localhost:5000/api/statistics",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"api",
												"statistics"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "notifications",
			"item": [
				{
					"name": "display",
					"item": []
				},
				{
					"name": "notifications display code 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('notifications display code 200', () => {",
									"    pm.response.to.have.status(200);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:5000/api/notifications",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"notifications"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}